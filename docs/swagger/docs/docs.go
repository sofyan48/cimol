// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-10-26 23:14:18.142576 +0700 WIB m=+0.022199203

package docs

import (
	"bytes"
	"encoding/json"
	"os"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
		"/forgot-password/1": {
			"put": {
				"description": "TODO: Add Description",
				"summary": "UPDATE_FORGOT_PASSWORD",
				"tags": [
					"Misc"
				],
				"operationId": "ForgotPassword1Put",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "token",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "status_token",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			},
			"get": {
				"description": "forgotpassword/:id",
				"summary": "GET_ALL_FORGETPASSWORD_BY_ID",
				"tags": [
					"Misc"
				],
				"operationId": "ForgotPassword1Get",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/forgot-password": {
			"get": {
				"description": "params:\nlimit\noffset",
				"summary": "GET_ALL_FORGET_PASSWORD",
				"tags": [
					"Misc"
				],
				"operationId": "ForgotPasswordGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "limit",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "offset",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			},
			"post": {
				"description": "TODO: Add Description",
				"summary": "CREATED_FORGOT_PASSWORD",
				"tags": [
					"Misc"
				],
				"operationId": "ForgotPasswordPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "token",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "status_token",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "users_id",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/users": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "CREATE_USERS",
				"tags": [
					"Misc"
				],
				"operationId": "UsersPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CREATE_USERS_REQUEST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			},
			"get": {
				"description": "params:\nlimit\noffset",
				"summary": "GET_ALL_USERS",
				"tags": [
					"Misc"
				],
				"operationId": "UsersGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "limit",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "offset",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/users/8": {
			"get": {
				"description": "users/:id",
				"summary": "GET_ALL_USERS_BY_ID",
				"tags": [
					"Misc"
				],
				"operationId": "Users8Get",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/organizers": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "CREATE_EVENT_ORGANIZERS",
				"tags": [
					"Misc"
				],
				"operationId": "OrganizersPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "name",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "logo",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "description",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "phone_number",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "address",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "city",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "province",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "district",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "cp_name",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "cp_phone",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "cp_email",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "cp_position",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/organizers/profile/1": {
			"put": {
				"description": "TODO: Add Description",
				"summary": "UPDATE_EVENT_ORGANIZERS",
				"tags": [
					"Misc"
				],
				"operationId": "OrganizersProfile1Put",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "name",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "logo",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "description",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "address",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "district",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "city",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "province",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "cp_name",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "cp_phone",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "cp_email",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "cp_position",
						"in": "formData",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/organizers/ralali-com-0810": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "GET_EVENT_ORGANIZERS_ALIAS",
				"tags": [
					"Misc"
				],
				"operationId": "OrganizersRalaliCom0810Get",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/ralali/oauth": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "RALALI_OAUTH",
				"tags": [
					"Misc"
				],
				"operationId": "RalaliOauthPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/RALALI_OAUTH_REQUEST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/login": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "LOGIN",
				"tags": [
					"Misc"
				],
				"operationId": "LoginPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LOGINREQUEST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/google/oauth": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "GOOGLE_OAUTH",
				"tags": [
					"Misc"
				],
				"operationId": "GoogleOauthPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/GOOGLE_OAUTH_REQUEST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/check": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "HEALTH_CHECK",
				"tags": [
					"Misc"
				],
				"operationId": "CheckGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/categories": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "GET_CATEGORIES",
				"tags": [
					"Misc"
				],
				"operationId": "CategoriesGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			},
			"post": {
				"description": "TODO: Add Description",
				"summary": "CREATE_CATEGORIES",
				"tags": [
					"Misc"
				],
				"operationId": "CategoriesPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "name",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "image",
						"in": "formData",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/event/categories/4": {
			"put": {
				"description": "TODO: Add Description",
				"summary": "UPDATE_CATEGORIES",
				"tags": [
					"Misc"
				],
				"operationId": "EventCategories4Put",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "name",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "image",
						"in": "formData",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/events/create": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "CREATE_EVENTS_BY_RAW",
				"tags": [
					"Misc"
				],
				"operationId": "EventsCreatePost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CREATE_EVENTS_BY_RAW_REQUEST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/events/detail": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "GET_EVENT_DETAIL",
				"tags": [
					"Misc"
				],
				"operationId": "EventsDetailGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "microsite_url",
						"in": "query",
						"required": true,
						"type": "string"
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/events/past": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "GET_EVENTS",
				"tags": [
					"Misc"
				],
				"operationId": "EventsPastGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "limit",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "offset",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/events/upcoming": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "GET_EVENT_UPCOMING",
				"tags": [
					"Misc"
				],
				"operationId": "EventsUpcomingGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "limit",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "offset",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/tickets/upcoming": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "SHOW_MY_UPCOMING_TICKETS",
				"tags": [
					"Misc"
				],
				"operationId": "TicketsUpcomingGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "limit",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "offset",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/search": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "SEARCH_EVENT_BY_NAME",
				"tags": [
					"Misc"
				],
				"operationId": "SearchGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "events",
						"in": "query",
						"required": true,
						"type": "string"
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/questions/additional-questions/4": {
			"get": {
				"description": "TODO: Add Description",
				"summary": "GET_QUESTION_BY_EVENT_ID",
				"tags": [
					"Misc"
				],
				"operationId": "QuestionsAdditionalQuestions4Get",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/questions/1": {
			"put": {
				"description": "TODO: Add Description",
				"summary": "UPDATE_QUESTION_BY_ID",
				"tags": [
					"Misc"
				],
				"operationId": "Questions1Put",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "event_id",
						"in": "formData",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "question",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "formData",
						"required": true,
						"type": "string"
					},
					{
						"name": "is_required",
						"in": "formData",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "options",
						"in": "formData",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		},
		"/questions/6": {
			"delete": {
				"description": "TODO: Add Description",
				"summary": "DELETE_QUESTION_BY_ID",
				"tags": [
					"Misc"
				],
				"operationId": "Questions6Delete",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				}
			}
		},
		"/orders/checkout": {
			"post": {
				"description": "TODO: Add Description",
				"summary": "ORDER_CHECKOUT",
				"tags": [
					"Misc"
				],
				"operationId": "OrdersCheckoutPost",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "Body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ORDER_CHECKOUT_REQUEST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"security": []
			}
		}
	},
	"definitions": {
		"CREATE_USERS_REQUEST": {
			"title": "CREATE_USERS_REQUEST",
			"example": {
				"name": "sdfsdfsdfsd",
				"email": "email1@ralali.com",
				"password": "12345678",
				"date_of_birth": "2019-01-10",
				"phone_number": "0823432423",
				"current_address": "",
				"city": "",
				"province": "",
				"district": "",
				"lat": 0,
				"lng": 0,
				"job": "",
				"image": "",
				"start_income": 0,
				"end_income": 0,
				"interests": "OK",
				"habit": "OK",
				"is_organizer": false
			},
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"date_of_birth": {
					"type": "string"
				},
				"phone_number": {
					"type": "string"
				},
				"current_address": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"province": {
					"type": "string"
				},
				"district": {
					"type": "string"
				},
				"lat": {
					"type": "integer",
					"format": "int32"
				},
				"lng": {
					"type": "integer",
					"format": "int32"
				},
				"job": {
					"type": "string"
				},
				"image": {
					"type": "string"
				},
				"start_income": {
					"type": "integer",
					"format": "int32"
				},
				"end_income": {
					"type": "integer",
					"format": "int32"
				},
				"interests": {
					"type": "string"
				},
				"habit": {
					"type": "string"
				},
				"is_organizer": {
					"type": "boolean"
				}
			},
			"required": [
				"name",
				"email",
				"password",
				"date_of_birth",
				"phone_number",
				"current_address",
				"city",
				"province",
				"district",
				"lat",
				"lng",
				"job",
				"image",
				"start_income",
				"end_income",
				"interests",
				"habit",
				"is_organizer"
			]
		},
		"RALALI_OAUTH_REQUEST": {
			"title": "RALALI_OAUTH_REQUEST",
			"example": {
				"email": "ralali.tester01@ralali.com",
				"password": "12345678"
			},
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			},
			"required": [
				"email",
				"password"
			]
		},
		"LOGINREQUEST": {
			"title": "LOGINREQUEST",
			"example": {
				"email": "agus@ralali.com",
				"password": "123456"
			},
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			},
			"required": [
				"email",
				"password"
			]
		},
		"GOOGLE_OAUTH_REQUEST": {
			"title": "GOOGLE_OAUTH_REQUEST",
			"example": {
				"id_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImRiMDJhYjMwZTBiNzViOGVjZDRmODE2YmI5ZTE5NzhmNjI4NDk4OTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI1OTY5MzUzMDcxODUtbm42aDkzbTRxbGxxbWYzMmsxNDNnMDhjbDM1ZXM1bHEuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI1OTY5MzUzMDcxODUtZHN1M2xkdXBnbjFoYmZtbXZrbm1tZzFuMnU3bjNuNmUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDIwNDU3MDMzODkwMTMwMTQ3NzEiLCJlbWFpbCI6ImJyYW1hbnR5YXJhaG1hbkBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IlJhaG1hbiBCcmFtYW50eWEiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FBdUU3bUR2SWdkSThZMW1RYzNKeGFGSVlDVVF1a3N4ZkowVFJtQ1pPTUxNN3c9czk2LWMiLCJnaXZlbl9uYW1lIjoiUmFobWFuIiwiZmFtaWx5X25hbWUiOiJCcmFtYW50eWEiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTU3Mzg4OTExMSwiZXhwIjoxNTczODkyNzExfQ.GsyUYVFCstwugyvC2_G1rN1t8txfwIeUaiTHQKKflMY43FRBiEUPlkRvJ1-AUL0LKUVcwewyHK0rKzyIpziu95dGMEaxvUYGIw-2SdSYWFQlancocPwx8hBH4VCcPwvpurUXF2VIogYqQTYVqW_xCD3iOWNbAf-HE7tn8rCq6BIt_VpO4l2EvrbLku9UGmMWIRjgXV3sBUwS8hRBDrRd75JikDE1nd9Q8KyMMBrRrZl2WgQWMv64ObHfBR4FIwnp-8RgciwNpbm2hvcUxkwcIsZGTHmpBIdNimL3JtVaBaYRFd1Ufdl5oRCJ2G4AfMGnNNHXypoy1lB3OPDXWF_lpQ",
				"image": "test",
				"email": "bramantyarahman@gmail.com",
				"name": "brams"
			},
			"type": "object",
			"properties": {
				"id_token": {
					"type": "string"
				},
				"image": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id_token",
				"image",
				"email",
				"name"
			]
		},
		"CREATE_EVENTS_BY_RAW_REQUEST": {
			"title": "CREATE_EVENTS_BY_RAW_REQUEST",
			"example": {
				"address": "Address",
				"description": "Description",
				"event_categories": 3,
				"event_name": "Event Name",
				"venue_name": "Venue Name",
				"start_date": "2019-12-01 12:00",
				"end_date": "2019-12-06 12:00",
				"images": "[\"https://via.placeholder.com/120?text=Events%201\",\"https://via.placeholder.com/120?text=Search%20by%20Filter%201\"]",
				"lat": 1,
				"lng": 10000,
				"limit_order": 3,
				"ticket_count": 15,
				"questions": [{
						"is_required": true,
						"options": "",
						"question": "Question 1",
						"type": "text_field"
					},
					{
						"is_required": false,
						"options": "['Option 1','Option 2','Option 3']",
						"question": "Question 2",
						"type": "multiple_choice"
					}
				],
				"tickets": [{
						"description": "Ticket Description 1",
						"name": "Ticket Name 1",
						"welcome_message": "Welcome Message 1",
						"price": 0,
						"quantity": 1000,
						"sale_start_date": "2019-12-01 12:00",
						"sale_end_date": "2020-01-01 12:00",
						"purchase_limit": 3
					},
					{
						"description": "VIP TICKET DUDUK PALING DEPAN",
						"name": "Ticket VIP",
						"welcome_message": "Welcome Message VIP",
						"price": 100000,
						"quantity": 10,
						"sale_start_date": "2019-12-01 12:00",
						"sale_end_date": "2020-01-01 12:00",
						"purchase_limit": 0
					}
				]
			},
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"event_categories": {
					"type": "integer",
					"format": "int32"
				},
				"event_name": {
					"type": "string"
				},
				"venue_name": {
					"type": "string"
				},
				"start_date": {
					"type": "string"
				},
				"end_date": {
					"type": "string"
				},
				"images": {
					"type": "string"
				},
				"lat": {
					"type": "number",
					"format": "double"
				},
				"lng": {
					"type": "integer",
					"format": "int32"
				},
				"limit_order": {
					"type": "integer",
					"format": "int32"
				},
				"ticket_count": {
					"type": "integer",
					"format": "int32"
				},
				"questions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Question"
					}
				},
				"tickets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Ticket"
					}
				}
			},
			"required": [
				"address",
				"description",
				"event_categories",
				"event_name",
				"venue_name",
				"start_date",
				"end_date",
				"images",
				"lat",
				"lng",
				"limit_order",
				"ticket_count",
				"questions",
				"tickets"
			]
		},
		"Question": {
			"title": "Question",
			"example": {
				"is_required": true,
				"options": "",
				"question": "Question 1",
				"type": "text_field"
			},
			"type": "object",
			"properties": {
				"is_required": {
					"type": "boolean"
				},
				"options": {
					"type": "string"
				},
				"question": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"required": [
				"is_required",
				"options",
				"question",
				"type"
			]
		},
		"Ticket": {
			"title": "Ticket",
			"example": {
				"description": "Ticket Description 1",
				"name": "Ticket Name 1",
				"welcome_message": "Welcome Message 1",
				"price": 0,
				"quantity": 1000,
				"sale_start_date": "2019-12-01 12:00",
				"sale_end_date": "2020-01-01 12:00",
				"purchase_limit": 3
			},
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"welcome_message": {
					"type": "string"
				},
				"price": {
					"type": "integer",
					"format": "int32"
				},
				"quantity": {
					"type": "integer",
					"format": "int32"
				},
				"sale_start_date": {
					"type": "string"
				},
				"sale_end_date": {
					"type": "string"
				},
				"purchase_limit": {
					"type": "integer",
					"format": "int32"
				}
			},
			"required": [
				"description",
				"name",
				"welcome_message",
				"price",
				"quantity",
				"sale_start_date",
				"sale_end_date",
				"purchase_limit"
			]
		},
		"ORDER_CHECKOUT_REQUEST": {
			"title": "ORDER_CHECKOUT_REQUEST",
			"example": {
				"event_id": 7,
				"tickets": [{
					"id": 5,
					"quantity": 2
				}]
			},
			"type": "object",
			"properties": {
				"event_id": {
					"type": "integer",
					"format": "int32"
				},
				"tickets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Ticket1"
					}
				}
			},
			"required": [
				"event_id",
				"tickets"
			]
		},
		"Ticket1": {
			"title": "Ticket1",
			"example": {
				"id": 5,
				"quantity": 2
			},
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"quantity": {
					"type": "integer",
					"format": "int32"
				}
			},
			"required": [
				"id",
				"quantity"
			]
		}
	}
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "ALPHA-0.4",
	Host:        os.Getenv("SWAGGER_SERVER_ADDRESS"),
	BasePath:    "/v1/",
	Schemes:     []string{},
	Title:       "BIG EVENT API",
	Description: "BIG EVENT API INTERFACE SCRACTH",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
